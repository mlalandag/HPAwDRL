from environments.environment   import K8Senvironment
from agents.DQNAgent            import DQNAgent
from configuration              import configuration
import matplotlib.pyplot        as plt
import numpy                    as np

if __name__ == "__main__":

    # Creamos el entorno y el agente       
    env = K8Senvironment()    
    agent = DQNAgent(configuration.ALPHA, configuration.GAMMA, configuration.MAX_NUM_PODS,
                           configuration.MIN_EPSILON, configuration.EPSILON, configuration.EPSILON_DECAY)
    # Cargamos el modelo
    agent.path = 'models\model.5.C.episodic.keras'
    agent.load_weights()
    # Creamos state
    state = [[0, 2, 2, 2, 3]]
    action = agent.act(state, False)
    reward = env.calculate_reward(state, action)
    print("state = {}, action = {}, reward= {}".format(state, action, reward)) 
    # state = [[2, 2, 0, 2, 0]]   
    # action = agent.act(state, False)
    # reward = env.calculate_reward(state, action)
    # print("state = {}, action = {}, reward= {}".format(state, action, reward)) 
    # state = [[3, 3, 0.0, 0.0, 0.0]]   
    # action = agent.act(state, False)
    # reward = env.calculate_reward(state, action)
    # print("state = {}, action = {}, reward= {}".format(state, action, reward))   
    # state = [[1, 1, 0, 0., 1]]   
    # action = agent.act(state, False)
    # reward = env.calculate_reward(state, action)
    # print("state = {}, action = {}, reward= {}".format(state, action, reward))   
    # state = [[3, 3, 3, 3, 0.0]]   
    # action = agent.act(state, False)
    # reward = env.calculate_reward(state, action)
    # print("state = {}, action = {}, reward= {}".format(state, action, reward))    